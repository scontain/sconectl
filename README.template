# `sconectl`

## What is `sconectl`

`sconectl` is a tool to transform cloud-native applications into cloud-confidential applications.

`sconectl` can

- transform native services into confidential services,  and
- services meshes into confidential service meshes.

## Where to execute `sconectl`

`sconectl` is a program that runs on your development machine and executes `scone` CLI commands in containers. For more details, see [`scone`](https://sconedocs.github.io/). 

Existing (native) executable can be transformed into confidential executable with the help of CLI `scone-signer` command we can convert native executable into a confidential applications.

## What platforms / CPUs are supported by `sconectl`?

- `sconectl` should run on any platform that supports Rust. It executes the `scone` CLI in containers.  We implemented `sconectl` in Rust. Alternatively, you can define an `alias` for your shell (see below).

- While `scone` have been built for Intel SGX, the newest version also supports Intel TDX and AMD SEV-SNP.


**NOTE:** The `scone` CLI uses modern x86-64 CPU instructions. Running on ARM CPUs, not all x86-64  instructions are emulated. Hence, `scone` CLI command will fail if essential instructions like  (e.g., `rdrand`) are not available. 


## Examples

To build the service OCI container image, you might execute on your development machine:

```bash
sconectl apply -f service.yml
```

where `service.yml` describes the confidential service.

To build and upload the security policy for the application using:

```bash
sconectl apply -f mesh.yml
```

## Setting up `sconectl`

First, ensure that you have `Rust` installed on your system. If execution of

```bash
rustc --version
```

fails, you need to install `Rust`. You can use [`rustup`](https://www.rust-lang.org/tools/install) to do so.

To install `sconectl` just type.

```bash
cargo install sconectl
```

`sconectl` requires access to container images. For now, you would need to register an account at our [gitlab](https://gitlab.scontain.com/).


## CLI Reference

```
